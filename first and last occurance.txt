first and last occurance

#include <iostream>

using namespace std;

int fib(int n){
    if(n==0 || n == 1){
        return n;
    }
    return fib(n-1)+fib(n-2);
}

int firocc(int*arr,int n,int key){
    
    if(n==0){
        return -1;
    }
    
    if(arr[0]==key){
        return 0; 
    }
    
    int subind = firocc(arr+1,n-1,key);
    if(subind!=-1){
        return subind +1;
    }
    return -1;
}
int lastocc(int *arr,int n,int key){
    
    if(n==0){
        return -1;
    }
    int subindex = lastocc(arr+1,n-1,key);
    if(subindex==-1){
        if(arr[0]==key){
            return 0;
        }
        else{
            return -1;
        }
    }
    else{
        return subindex+1;
    }
}
int main()
{
    int arr[7] = {1,3,4,56,7,11,7};
    int n;
    cin>>n;
    cout<<firocc(arr,6,n)<<endl;
    cout<<lastocc(arr,7,n);
    //cout<<fib(n)<<endl;

    return 0;
}