
#include <iostream>

using namespace std;

void subarraysum(int*arr,int n){
    int sum =0;
    for(int i =0;i<n;i++){
        for(int j =i;j<n;j++){
            //cout<<"("<<i<<","<<j<<")";
            int x =0;
            for(int k =i;k<=j;k++){
                x += arr[k];
                cout<<x<<" ";
            }
            sum = max(sum,x);
        }
        
        cout<<endl;
    }
    cout<<sum<<endl;
}


void prefixsubarry_sum(int * arr,int n){
    int prefix[100]={0};
    prefix[0]=arr[0];
    for(int i =1;i<n;i++){
        prefix[i]=prefix[i-1]+arr[i];
        //cout<<prefix[i]<<" ";
    }
    cout<<endl;
    int largest_sum =0;
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            int sum = i>0 ? prefix[j]-prefix[i-1] : prefix[j];
            
            largest_sum= max(largest_sum,sum);
        }
    }
    cout<<largest_sum<<endl;
}
void insertarray(int *arr, int n){
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
}
void print_array(int *arr, int n){
    for(int i=0;i<n;i++){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}
int main()
{
    int n;
    cin>>n;
    int arr[]= new int(n);
    int arr[n];
    insertarray(arr,n);
    print_array(arr,n);
    //subarraysum(arr,n);
    prefixsubarry_sum(arr,n);

    return 0;
}

#include <iostream>
#include <vector>
using namespace std;

vector<int> two_sum(vector<int> arr,int target,int n){
	vector<int>v;
	for(int i =0;i<n;i++){
		for(int j=i+1;j<n;j++){
			if(arr[i] + arr[j] == target){
			    v.push_back({i,j});
			}
		}
	}
	return v;
}

void print_any(vector<int>v,int n){
	for(int i =0;i<n;i++){
	    cout<<v[i]<<" ";
	}
	cout<<endl;
}

int main(){
	vector<int>arr={2,3,4,5,6};
	int n = arr.size();	
	int target = 5;
	vector<int>ans;
	int n2 = ans.size();
	ans = two_sum(arr,target,n);
	print_any(ans,n2);
	
	
	return 0;

}